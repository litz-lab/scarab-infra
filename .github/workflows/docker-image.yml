name: Build and Publish Docker Image CI

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
    contents: write
    packages: write

jobs:
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set current GIT_HASH
        id: current_hash
        run: echo "githash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Read last built tag from last_built_tag.txt
        id: last_tag
        run: |
          if [[ -f last_built_tag.txt ]]; then
            TAG=$(cat last_built_tag.txt)
            echo "Found last built tag: $TAG"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          else
            echo "No last_built_tag.txt found, assuming first build."
            echo "tag=" >> $GITHUB_OUTPUT
          fi

      - name: Check if relevant directories changed since last build
        id: changes
        env:
          LAST_TAG: ${{ steps.last_tag.outputs.tag }}
        run: |
          if [[ -z "$LAST_TAG" ]]; then
            echo "No previous tag â€” assuming first build."
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            git fetch origin main --depth=50
            CHANGED=$(git diff --name-only "$LAST_TAG" HEAD | grep -E '^(common/|workloads/allbench_traces/)' || true)
            if [[ -n "$CHANGED" ]]; then
              echo "Relevant changes detected:"
              echo "$CHANGED"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "No relevant changes detected."
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Log in to GitHub Container Registry
        if: steps.changes.outputs.changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        if: steps.changes.outputs.changed == 'true'
        run: |
          docker build . \
          --file ./workloads/allbench_traces/Dockerfile \
          --no-cache \
          --tag ghcr.io/litz-lab/scarab-infra/allbench_traces:${{ steps.current_hash.outputs.githash }}

      - name: Push Docker image to GitHub Packages
        if: steps.changes.outputs.changed == 'true'
        run: docker push ghcr.io/litz-lab/scarab-infra/allbench_traces:${{ steps.current_hash.outputs.githash }}

      - name: Save short GIT_HASH to last_built_tag.txt
        if: steps.changes.outputs.changed == 'true'
        run: |
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "Saving GIT_HASH: $SHORT_HASH"
          echo "$SHORT_HASH" > last_built_tag.txt

      - name: Create Pull Request to update tag
        if: steps.changes.outputs.changed == 'true'
        uses: cli/gh-action@v2

      - name: Commit and push new branch, create PR
        if: steps.changes.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          BRANCH_NAME=auto/update-tag-${{ steps.current_hash.outputs.githash }}

          git checkout -b $BRANCH_NAME
          git add last_built_tag.txt
          git commit -m "Auto update Docker image tag to $BRANCH_NAME"
          git push origin $BRANCH_NAME

          gh pr create \
            --title "Update Docker tag to $BRANCH_NAME" \
            --body "Automated update to \`last_built_tag.txt\` after pushing Docker image." \
            --base main \
            --head $BRANCH_NAME
